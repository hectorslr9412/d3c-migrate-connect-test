# .github/workflows/export.yml
name: Exportar Recursos (Modular)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente a exportar'
        required: true
        type: choice
        options: [dev, sbx, qa, prod]

      export_all:
        description: 'Exportar TODO'
        type: boolean
        default: false

      lambdas:
        description: 'Lambdas'
        type: boolean
        default: true

      flows:
        description: 'Amazon Connect Flows'
        type: boolean
        default: false

      queues:
        description: 'Amazon Connect Queues'
        type: boolean
        default: false

      users:
        description: 'Usuarios de Connect'
        type: boolean
        default: false

jobs:
  export:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ==============================
      # 1. CARGAR CONFIG + CALCULAR CARPETA
      # ==============================
      - name: Configurar variables
        id: vars
        run: |
          ENV=${{ inputs.environment }}
          DATE=$(date +'%Y-%m-%d')
          FOLDER="exports/release-${ENV}-${DATE}"
          
          echo "environment=${ENV}" >> $GITHUB_OUTPUT
          echo "date=${DATE}" >> $GITHUB_OUTPUT
          echo "folder=${FOLDER}" >> $GITHUB_OUTPUT
          
          # Cargar ambiente
          jq -r ".${ENV}" environments.json > env.json
          echo "accountId=$(jq -r '.accountId' env.json)" >> $GITHUB_OUTPUT
          echo "connectInstanceId=$(jq -r '.connectInstanceId' env.json)" >> $GITHUB_OUTPUT
          echo "region=$(jq -r '.region' env.json)" >> $GITHUB_OUTPUT

      # ==============================
      # 2. VALIDAR SELECCIÓN
      # ==============================
      - name: Validar selección
        if: ${{ !inputs.export_all && !inputs.lambdas && !inputs.flows && !inputs.queues && !inputs.users }}
        run: |
          echo "ERROR: Debe seleccionar al menos un recurso o 'Exportar TODO'"
          exit 1

      # ==============================
      # 3. CONFIGURAR PYTHON Y AWS
      # ==============================
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependencias
        run: pip install boto3 requests jq

      - name: Configurar AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ steps.vars.outputs.accountId }}:role/d3c-GitHubAction-AssumeRoleWithAction
          aws-region: ${{ steps.vars.outputs.region }}
          role-session-name: export-${{ inputs.environment }}-${{ github.run_id }}

      # ==============================
      # 4. EXPORTAR RECURSOS (MODULAR)
      # ==============================
      - name: Exportar Lambdas
        if: ${{ inputs.export_all || inputs.lambdas }}
        env:
          EXPORT_FOLDER: ${{ steps.vars.outputs.folder }}
        run: |
          mkdir -p ${{ env.EXPORT_FOLDER }}/lambdas
          python export_lambdas.py

      - name: Exportar Flows
        if: ${{ inputs.export_all || inputs.flows }}
        env:
          EXPORT_FOLDER: ${{ steps.vars.outputs.folder }}
          CONNECT_INSTANCE_ID: ${{ steps.vars.outputs.connectInstanceId }}
        run: |
          mkdir -p ${{ env.EXPORT_FOLDER }}/Flows
          python export_flows.py

      - name: Exportar Queues
        if: ${{ inputs.export_all || inputs.queues }}
        env:
          EXPORT_FOLDER: ${{ steps.vars.outputs.folder }}
        run: |
          mkdir -p ${{ env.EXPORT_FOLDER }}/queues
          python export_queues.py

      - name: Exportar Usuarios
        if: ${{ inputs.export_all || inputs.users }}
        env:
          EXPORT_FOLDER: ${{ steps.vars.outputs.folder }}
          CONNECT_INSTANCE_ID: ${{ steps.vars.outputs.connectInstanceId }}
        run: |
          mkdir -p ${{ env.EXPORT_FOLDER }}/users
          python export_users.py

      # ==============================
      # 5. RESUMEN Y COMMIT
      # ==============================
      - name: Generar config.json y Commit
        run: |
          FOLDER="${{ steps.vars.outputs.folder }}"
          SELECTED=()
          ${{ inputs.export_all }} && SELECTED+=("all")
          ${{ inputs.lambdas }} && SELECTED+=("lambdas")
          ${{ inputs.flows }} && SELECTED+=("flows")
          ${{ inputs.queues }} && SELECTED+=("queues")
          ${{ inputs.users }} && SELECTED+=("users")

          # === GUARDAR CONFIG ===
          cat > ${FOLDER}/config.json << 'EOF'
          {
            "source": "${{ inputs.environment }}",
            "date": "${{ steps.vars.outputs.date }}",
            "exported": [$(printf '"%s",' "${SELECTED[@]}" | sed 's/,$//')]
          }
          EOF

          # === AGREGAR RELEASE A releases.txt ===
          RELEASE_NAME=$(basename "$FOLDER")
          echo "$RELEASE_NAME" >> releases.txt

          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add exports/ releases.txt
          git commit -m "Export: ${{ inputs.environment }} - $(printf '%s ' "${SELECTED[@]}") - ${{ steps.vars.outputs.date }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# .github/workflows/export.yml
name: Export Resources (Modular)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to export'
        required: true
        type: choice
        options: [dev, sbx, qa, prod]

      export_all:
        description: 'Export EVERYTHING'
        type: boolean
        default: false

      lambdas:
        description: 'Lambdas'
        type: boolean
        default: true

      flows:
        description: 'Amazon Connect Flows'
        type: boolean
        default: false

      queues:
        description: 'Amazon Connect Queues'
        type: boolean
        default: false

      users:
        description: 'Amazon Connect Users'
        type: boolean
        default: false

jobs:
  export:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ==============================
      # 1. LOAD CONFIG + CALCULATE FOLDER
      # ==============================
      - name: Configure variables
        id: vars
        run: |
          ENV=${{ inputs.environment }}
          DATE=$(date +'%Y-%m-%d')
          FOLDER="exports/release-${ENV}-${DATE}"
          
          echo "environment=${ENV}" >> $GITHUB_OUTPUT
          echo "date=${DATE}" >> $GITHUB_OUTPUT
          echo "folder=${FOLDER}" >> $GITHUB_OUTPUT
          
          # Load environment
          jq -r ".${ENV}" environments.json > env.json
          echo "accountId=$(jq -r '.accountId' env.json)" >> $GITHUB_OUTPUT
          echo "connectInstanceId=$(jq -r '.connectInstanceId' env.json)" >> $GITHUB_OUTPUT
          echo "region=$(jq -r '.region' env.json)" >> $GITHUB_OUTPUT

      # ==============================
      # 2. VALIDATE SELECTION
      # ==============================
      - name: Validate selection
        if: ${{ !inputs.export_all && !inputs.lambdas && !inputs.flows && !inputs.queues && !inputs.users }}
        run: |
          echo "ERROR: You must select at least one resource or 'Export EVERYTHING'"
          exit 1

      # ==============================
      # 3. SET UP PYTHON AND AWS
      # ==============================
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install boto3 requests jq

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ steps.vars.outputs.accountId }}:role/d3c-GitHubAction-AssumeRoleWithAction
          aws-region: ${{ steps.vars.outputs.region }}
          role-session-name: export-${{ inputs.environment }}-${{ github.run_id }}

      # ==============================
      # 4. EXPORT RESOURCES (MODULAR)
      # ==============================
      - name: Export Lambdas
        if: ${{ inputs.export_all || inputs.lambdas }}
        env:
          EXPORT_FOLDER: ${{ steps.vars.outputs.folder }}
        run: |
          mkdir -p ${{ env.EXPORT_FOLDER }}/lambdas
          python scripts/export_lambdas.py

      - name: Export Flows
        if: ${{ inputs.export_all || inputs.flows }}
        env:
          EXPORT_FOLDER: ${{ steps.vars.outputs.folder }}
          CONNECT_INSTANCE_ID: ${{ steps.vars.outputs.connectInstanceId }}
        run: |
          mkdir -p ${{ env.EXPORT_FOLDER }}/Flows
          python scripts/export_flows.py

      - name: Export Queues
        if: ${{ inputs.export_all || inputs.queues }}
        env:
          EXPORT_FOLDER: ${{ steps.vars.outputs.folder }}
        run: |
          mkdir -p ${{ env.EXPORT_FOLDER }}/queues
          python scripts/export_queues.py

      - name: Export Users
        if: ${{ inputs.export_all || inputs.users }}
        env:
          EXPORT_FOLDER: ${{ steps.vars.outputs.folder }}
          CONNECT_INSTANCE_ID: ${{ steps.vars.outputs.connectInstanceId }}
        run: |
          mkdir -p ${{ env.EXPORT_FOLDER }}/users
          python scripts/export_users.py

      # ==============================
      # 5. SUMMARY AND COMMIT
      # ==============================
      - name: Generate config.json and update releases.json
        run: |
          FOLDER="${{ steps.vars.outputs.folder }}"
          SELECTED=()
          ${{ inputs.export_all }} && SELECTED+=("all")
          ${{ inputs.lambdas }} && SELECTED+=("lambdas")
          ${{ inputs.flows }} && SELECTED+=("flows")
          ${{ inputs.queues }} && SELECTED+=("queues")
          ${{ inputs.users }} && SELECTED+=("users")

          # === SAVE RELEASE CONFIG ===
          cat > ${FOLDER}/config.json << EOF
          {
            "source": "${{ inputs.environment }}",
            "date": "${{ steps.vars.outputs.date }}",
            "exported": [$(printf '"%s",' "${SELECTED[@]}" | sed 's/,$//')]
          }
          EOF

          RELEASE_NAME=$(basename "$FOLDER")

          # === UPDATE releases.json ===
          RELEASES_FILE="releases.json"

          if [ ! -f "$RELEASES_FILE" ]; then
            echo "[]" > "$RELEASES_FILE"
          fi

          jq --arg name "$RELEASE_NAME" \
             --arg env "${{ inputs.environment }}" \
             --arg date "${{ steps.vars.outputs.date }}" \
             --argjson exported "[ $(printf '"%s",' "${SELECTED[@]}" | sed 's/,$//') ]" \
             '. += [{"name": $name, "environment": $env, "date": $date, "exported": $exported}]' \
             "$RELEASES_FILE" > tmp.json && mv tmp.json "$RELEASES_FILE"

          # === COMMIT ===
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add exports/ releases.json
          git commit -m "Export: ${{ inputs.environment }} - $(printf '%s ' "${SELECTED[@]}") - ${{ steps.vars.outputs.date }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
